{
  "name": "sprinter-liquidity-contracts",
  "version": "1.0.0",
  "description": "Liquidity provision for Sprinter",
  "main": "index.js",
  "scripts": {
    "compile": "hardhat compile",
    "deploy": "hardhat run ./scripts/deploy.ts",
    "deploy-local": "hardhat run ./scripts/deploy.ts --network localhost",
    "deploy-basesepolia": "hardhat run ./scripts/deploy.ts --network BASE_SEPOLIA",
    "deploy-ethereumsepolia": "hardhat run ./scripts/deploy.ts --network ETHEREUM_SEPOLIA",
    "deploy-arbitrumsepolia": "hardhat run ./scripts/deploy.ts --network ARBITRUM_SEPOLIA",
    "deploy-opsepolia": "hardhat run ./scripts/deploy.ts --network OP_SEPOLIA",
    "deploy-base": "hardhat run ./scripts/deploy.ts --network BASE",
    "deploy-ethereum": "hardhat run ./scripts/deploy.ts --network ETHEREUM",
    "deploy-arbitrumone": "hardhat run ./scripts/deploy.ts --network ARBITRUM_ONE",
    "deploy-opmainnet": "hardhat run ./scripts/deploy.ts --network OP_MAINNET",
    "deploy-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deploy.ts --network BASE",
    "deploy-arbitrumone-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deploy.ts --network ARBITRUM_ONE",
    "deploy-opmainnet-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deploy.ts --network OP_MAINNET",
    "redeploy-stash-basesepolia": "hardhat run ./scripts/redeployStash.ts --network BASE_SEPOLIA",
    "redeploy-stash-base": "hardhat run ./scripts/redeployStash.ts --network BASE",
    "deploy-censoredmulticall-ethereum": "hardhat run ./scripts/deployCensoredMulticall.ts --network ETHEREUM",
    "deploy-usdcpool-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deployUSDCPool.ts --network BASE",
    "deploy-usdcstablecoinpool-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deployUSDCStablecoinPool.ts --network BASE",
    "deploy-repayer-base": "hardhat run ./scripts/deployRepayer.ts --network BASE",
    "deploy-repayer-arbitrumone": "hardhat run ./scripts/deployRepayer.ts --network ARBITRUM_ONE",
    "deploy-repayer-opmainnet": "hardhat run ./scripts/deployRepayer.ts --network OP_MAINNET",
    "deploy-repayer-polygon": "hardhat run ./scripts/deployRepayer.ts --network POLYGON_MAINNET",
    "deploy-repayer-unichain": "hardhat run ./scripts/deployRepayer.ts --network UNICHAIN",
    "deploy-repayer-ethereum": "hardhat run ./scripts/deployRepayer.ts --network ETHEREUM",
    "deploy-repayer-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deployRepayer.ts --network BASE",
    "deploy-repayer-arbitrumone-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deployRepayer.ts --network ARBITRUM_ONE",
    "deploy-repayer-opmainnet-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/deployRepayer.ts --network OP_MAINNET",
    "deploy-spark-stage-repayer-base": "STANDALONE_REPAYER_ENV=SparkStage hardhat run ./scripts/deployStandaloneRepayer.ts --network BASE",
    "deploy-spark-stage-repayer-arbitrumone": "STANDALONE_REPAYER_ENV=SparkStage hardhat run ./scripts/deployStandaloneRepayer.ts --network ARBITRUM_ONE",
    "deploy-spark-stage-repayer-opmainnet": "STANDALONE_REPAYER_ENV=SparkStage hardhat run ./scripts/deployStandaloneRepayer.ts --network OP_MAINNET",
    "upgrade-liquidityhub-basesepolia": "hardhat run ./scripts/upgradeLiquidityHub.ts --network BASE_SEPOLIA",
    "upgrade-liquidityhub-base": "hardhat run ./scripts/upgradeLiquidityHub.ts --network BASE",
    "upgrade-rebalancer-basesepolia": "hardhat run ./scripts/upgradeRebalancer.ts --network BASE_SEPOLIA",
    "upgrade-rebalancer-base": "hardhat run ./scripts/upgradeRebalancer.ts --network BASE",
    "upgrade-rebalancer-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/upgradeRebalancer.ts --network BASE",
    "upgrade-repayer-basesepolia": "hardhat run ./scripts/upgradeRepayer.ts --network BASE_SEPOLIA",
    "upgrade-repayer-base": "hardhat run ./scripts/upgradeRepayer.ts --network BASE",
    "upgrade-repayer-base-stage": "DEPLOY_TYPE=STAGE hardhat run ./scripts/upgradeRepayer.ts --network BASE",
    "node": "hardhat node",
    "hardhat": "hardhat",
    "dry:deploy-basesepolia": "DRY_RUN=BASE_SEPOLIA VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-ethereumsepolia": "DRY_RUN=ETHEREUM_SEPOLIA VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-arbitrumsepolia": "DRY_RUN=ARBITRUM_SEPOLIA VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-opsepolia": "DRY_RUN=OP_SEPOLIA VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-ethereum": "DRY_RUN=ETHEREUM VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-arbitrumone": "DRY_RUN=ARBITRUM_ONE VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-opmainnet": "DRY_RUN=OP_MAINNET VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-arbitrumone-stage": "DRY_RUN=ARBITRUM_ONE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:deploy-opmainnet-stage": "DRY_RUN=OP_MAINNET DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deploy.ts",
    "dry:redeploy-stash-basesepolia": "DRY_RUN=BASE_SEPOLIA VERIFY=false ts-node --files ./scripts/redeployStash.ts",
    "dry:redeploy-stash-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/redeployStash.ts",
    "dry:deploy-censoredmulticall-ethereum": "DRY_RUN=ETHEREUM VERIFY=false ts-node --files ./scripts/deployCensoredMulticall.ts",
    "dry:deploy-usdcpool-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deployUSDCPool.ts",
    "dry:deploy-usdcstablecoinpool-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deployUSDCStablecoinPool.ts",
    "dry:deploy-repayer-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-arbitrumone": "DRY_RUN=ARBITRUM_ONE VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-opmainnet": "DRY_RUN=OP_MAINNET VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-polygon": "DRY_RUN=POLYGON_MAINNET VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-unichain": "__EDR_UNSAFE_SKIP_UNSUPPORTED_TRANSACTION_TYPES=true DRY_RUN=UNICHAIN VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-ethereum": "DRY_RUN=ETHEREUM VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-arbitrumone-stage": "DRY_RUN=ARBITRUM_ONE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-repayer-opmainnet-stage": "DRY_RUN=OP_MAINNET DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/deployRepayer.ts",
    "dry:deploy-spark-stage-repayer-base": "DRY_RUN=BASE STANDALONE_REPAYER_ENV=SparkStage VERIFY=false ts-node --files ./scripts/deployStandaloneRepayer.ts",
    "dry:deploy-spark-stage-repayer-arbitrumone": "DRY_RUN=ARBITRUM_ONE STANDALONE_REPAYER_ENV=SparkStage VERIFY=false ts-node --files ./scripts/deployStandaloneRepayer.ts",
    "dry:deploy-spark-stage-repayer-opmainnet": "DRY_RUN=OP_MAINNET STANDALONE_REPAYER_ENV=SparkStage VERIFY=false ts-node --files ./scripts/deployStandaloneRepayer.ts",
    "dry:upgrade-liquidityhub-basesepolia": "DRY_RUN=BASE_SEPOLIA VERIFY=false ts-node --files ./scripts/upgradeLiquidityHub.ts",
    "dry:upgrade-liquidityhub-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/upgradeLiquidityHub.ts",
    "dry:upgrade-rebalancer-basesepolia": "DRY_RUN=BASE_SEPOLIA VERIFY=false ts-node --files ./scripts/upgradeRebalancer.ts",
    "dry:upgrade-rebalancer-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/upgradeRebalancer.ts",
    "dry:upgrade-rebalancer-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/upgradeRebalancer.ts",
    "dry:upgrade-repayer-basesepolia": "DRY_RUN=BASE_SEPOLIA VERIFY=false ts-node --files ./scripts/upgradeRepayer.ts",
    "dry:upgrade-repayer-base": "DRY_RUN=BASE VERIFY=false ts-node --files ./scripts/upgradeRepayer.ts",
    "dry:upgrade-repayer-base-stage": "DRY_RUN=BASE DEPLOY_TYPE=STAGE VERIFY=false ts-node --files ./scripts/upgradeRepayer.ts",
    "lint": "npm run lint:solidity && npm run lint:ts",
    "lint:solidity": "solhint 'contracts/**/*.sol'",
    "lint:ts": "eslint",
    "test": "hardhat test --typecheck",
    "test:ethereum": "FORK_TEST=ETHEREUM hardhat test --typecheck ./specific-fork-test/ethereum/*.ts",
    "test:deploy": "ts-node --files ./scripts/deploy.ts",
    "test:scripts": "SCRIPT_ENV=CI DEPLOY_ID=CI ts-node --files ./scripts/test.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sygmaprotocol/sprinter-liquidity-contracts.git"
  },
  "keywords": [
    "solidity",
    "ethereum",
    "interoperability"
  ],
  "author": "ChainSafe Systems (Oleksii Matiiasevych)",
  "license": "LGPL-3.0",
  "bugs": {
    "url": "https://github.com/sygmaprotocol/sprinter-liquidity-contracts/issues"
  },
  "homepage": "https://github.com/sygmaprotocol/sprinter-liquidity-contracts#readme",
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@nomicfoundation/hardhat-toolbox": "^5.0.0",
    "dotenv": "^16.4.7",
    "eslint": "^9.17.0",
    "hardhat": "^2.22.17",
    "hardhat-ignore-warnings": "^0.2.12",
    "solhint": "^5.0.4",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.19.1"
  },
  "dependencies": {
    "@bgd-labs/aave-address-book": "^4.10.0",
    "@crytic/properties": "github:crytic/properties",
    "@openzeppelin/contracts": "^5.1.0",
    "@openzeppelin/contracts-upgradeable": "^5.1.0"
  }
}
